{"version":3,"file":"static/js/636.e4d30254.chunk.js","mappings":"sOAEaA,E,QAAoBC,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2D,mBCF9BC,EACX,mECmBSC,EAAS,WAGlB,IAHiC,IAAdC,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GACtBG,EAAK,GACLC,EAAQC,OAAOC,gBAAgB,IAAIC,WAAWR,IAC3CA,KACLI,GAAMN,EAA0B,GAAdO,EAAML,IAE1B,OAAOI,CACT,E,SCiDA,EAvDiB,WACf,IAAAK,GAAgCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAwB5B,OAtBAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAESC,EAAAA,EAAAA,KAAIC,EAAAA,EAAAA,IAAMC,EAAAA,GAAO,aAAa,KAAD,GAA9CP,EAAQE,EAAAM,MAEDC,UACLR,EAAeD,EAASU,MAAMC,KAAI,SAAAC,GAAO,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC1CD,GAAO,IACV7B,GAAIL,KAAQ,IAEde,EAAYQ,IAEZa,QAAQC,IAAI,qBACbb,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAc,GAAAd,EAAA,SAEDY,QAAQG,MAAKf,EAAAc,IAAQ,yBAAAd,EAAAgB,OAAA,GAAAnB,EAAA,kBAExB,kBAhBc,OAAAH,EAAAuB,MAAA,KAAAvC,UAAA,KAkBfe,GACF,GAAG,KAGDyB,EAAAA,EAAAA,KAAC/C,EAAiB,CAAAgD,SACf7B,GACC4B,EAAAA,EAAAA,KAAA,OAAAC,SACG7B,EAASmB,KAAI,SAAAC,GAAO,OACnBU,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,IAAET,EAAQW,KAAK,QACnBH,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAAA,OACEI,IAAKZ,EAAQa,WACbC,QAAQ,OACRC,IAAI,SACJC,MAAM,MACNC,OAAO,WAGXP,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,WAAST,EAAQkB,cACrBR,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,gBAAcT,EAAQmB,gBAC1BX,EAAAA,EAAAA,KAAA,MAAAC,SAAKT,EAAQoB,cACbZ,EAAAA,EAAAA,KAAA,MAAAC,SAAKT,EAAQqB,WAdNrB,EAAQ7B,GAeZ,OAITqC,EAAAA,EAAAA,KAAA,OAAAC,SAAK,gBAIb,C","sources":["pages/Teachers/Teachers.styled.js","../node_modules/nanoid/url-alphabet/index.js","../node_modules/nanoid/index.browser.js","pages/Teachers/Teachers.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const TeachersContainer = styled.div`\npadding-left: 128px;\n    padding-right: 128px;\n`","export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","import { urlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += urlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n","import { child, get } from 'firebase/database';\nimport { TeachersContainer } from './Teachers.styled';\nimport { dbRef } from '../../firebase';\nimport React, { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\n\n//  const teatcherList = get(child(dbRef, 'teatchers'))\n//     .then(snapshot => {\n//       if (snapshot.exists()) {\n//         const teatchers = snapshot.val();\n//         console.log(teatchers);\n//       } else {\n//         console.log('No data available');\n//       }\n//     })\n//     .catch(error => {\n//       console.error(error);\n//     });\n\n// console.log(teatcherList);\n\nconst Teachers = () => {\n  const [teachers, setTeachers] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const snapshot = await get(child(dbRef, 'teachers'));\n\n        if (snapshot.exists()) {\n          const teachersData = snapshot.val().map(teacher => ({\n            ...teacher,\n            id: nanoid(),\n          }));\n          setTeachers(teachersData);\n        } else {\n          console.log('No data available');\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <TeachersContainer>\n      {teachers ? (\n        <div>\n          {teachers.map(teacher => (\n            <ul key={teacher.id}>\n              <li> {teacher.name} </li>\n              <li>\n                <img\n                  src={teacher.avatar_url}\n                  loading=\"lazy\"\n                  alt=\"avatar\"\n                  width=\"120\"\n                  height=\"120\"\n                />\n              </li>\n              <li>Speaks: {teacher.languages}</li>\n              <li>Lesson info: {teacher.lesson_info}</li>\n              <li>{teacher.conditions}</li>\n              <li>{teacher.levels}</li>\n            </ul>\n          ))}\n        </div>\n      ) : (\n        <div>Loading...</div>\n      )}\n    </TeachersContainer>\n  );\n};\n\nexport default Teachers;\n"],"names":["TeachersContainer","styled","_templateObject","_taggedTemplateLiteral","urlAlphabet","nanoid","size","arguments","length","undefined","id","bytes","crypto","getRandomValues","Uint8Array","_useState","useState","_useState2","_slicedToArray","teachers","setTeachers","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","snapshot","teachersData","_context","prev","next","get","child","dbRef","sent","exists","val","map","teacher","_objectSpread","console","log","t0","error","stop","apply","_jsx","children","_jsxs","name","src","avatar_url","loading","alt","width","height","languages","lesson_info","conditions","levels"],"sourceRoot":""}